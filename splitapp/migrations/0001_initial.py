# Generated by Django 4.2.17 on 2024-12-16 19:10

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Expense',
            fields=[
                ('expense_id', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('amount', models.FloatField()),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('split_type', models.CharField(choices=[('EQUAL', 'Equal'), ('PERCENTAGE', 'Percentage'), ('SHARE', 'Share')], default='EQUAL', max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('group_id', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('detailed_balance', models.JSONField(blank=True, default=dict)),
                ('total_balance', models.FloatField(default=0.0)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('user_id', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('phone', models.CharField(blank=True, max_length=15, null=True, unique=True)),
                ('detailed_balance', models.JSONField(blank=True, default=dict)),
                ('balance', models.FloatField(default=0.0)),
            ],
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('transaction_id', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('amount', models.FloatField()),
                ('transaction_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('COMPLETED', 'Completed'), ('CANCELLED', 'Cancelled')], default='PENDING', max_length=20)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('from_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transactions_sent', to='splitapp.user')),
                ('to_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transactions_received', to='splitapp.user')),
            ],
        ),
        migrations.CreateModel(
            name='TelegramMiniApp',
            fields=[
                ('app_id', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('version', models.CharField(max_length=10)),
                ('groups', models.ManyToManyField(related_name='telegram_groups', to='splitapp.group')),
                ('users', models.ManyToManyField(related_name='telegram_users', to='splitapp.user')),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('notification_id', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('message', models.CharField(max_length=255)),
                ('status', models.CharField(choices=[('UNREAD', 'Unread'), ('READ', 'Read')], default='UNREAD', max_length=10)),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('receiver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications_received', to='splitapp.user')),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications_sent', to='splitapp.user')),
            ],
        ),
        migrations.CreateModel(
            name='GroupMembers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('joined_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='splitapp.group')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='splitapp.user')),
            ],
            options={
                'unique_together': {('group', 'user')},
            },
        ),
        migrations.AddField(
            model_name='group',
            name='members',
            field=models.ManyToManyField(related_name='groups_involved', through='splitapp.GroupMembers', to='splitapp.user'),
        ),
        migrations.CreateModel(
            name='ExpenseParticipants',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('share', models.FloatField(default=0.0)),
                ('expense', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='splitapp.expense')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='splitapp.user')),
            ],
        ),
        migrations.AddField(
            model_name='expense',
            name='group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='expenses', to='splitapp.group'),
        ),
        migrations.AddField(
            model_name='expense',
            name='participants',
            field=models.ManyToManyField(related_name='expenses_shared', through='splitapp.ExpenseParticipants', to='splitapp.user'),
        ),
        migrations.AddField(
            model_name='expense',
            name='payer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='expenses_paid', to='splitapp.user'),
        ),
    ]
